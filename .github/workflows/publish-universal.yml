name: Publish - universal

on:
  workflow_dispatch:
    inputs:
      version:
        description: version type
        type: choice
        options: [patch, minor, major]
        default: patch
  workflow_call:
    inputs:
      version:
        description: version type
        type: string
        default: patch
    secrets:
      NPM_TOKEN:
        required: true
      APPLITOOLS_API_KEY:
        required: true
      APPLITOOLS_API_KEY_READ:
        required: true
      UNIVERSAL_SLACK_WEBHOOK_URL:
        required: true

env:
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  AZURE_STORAGE_CONNECTION_STRING: ${{secrets.AZURE_STORAGE_CONNECTION_STRING}}

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      branch: ${{steps.version.outputs.branch}}
      version: ${{steps.version.outputs.version}}
      tag: ${{steps.version.outputs.tag}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Version
        id: version
        uses: ./.github/actions/version
        with:
          working-directory: ./js/packages/eyes-universal
          version: ${{inputs.version || github.event.inputs.version}}
  build:
    needs: [prepare]
    name: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x64
          - name: arm64
            arch: aarch64
            distro: ubuntu18.04
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
      - name: Setup Node.js
        env:
          arch: ${{matrix.arch}}
        if: ${{env.arch == ''}}
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Build
        shell: bash
        env:
          arch: ${{matrix.arch}}
        if: ${{env.arch == ''}}
        working-directory: ./js/packages/eyes-universal
        run: |
          echo //registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}} > $HOME/.npmrc && yarn install && rm -rf $HOME/.npmrc
          yarn build:${{matrix.name}} 
          yarn build:zip && yarn build:tgz
      - uses: uraimo/run-on-arch-action@v2
        if: ${{matrix.arch}}
        name: Build ARM
        with:
          env: |
            artifact_name: universal-${{ matrix.distro }}_${{ matrix.arch }}
          githubToken: ${{ github.token }}
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          dockerRunArgs: |
            --volume "${PWD}/js/packages/eyes-universal/:/src"
          shell: /bin/sh
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y curl zip tar
                curl -sL https://deb.nodesource.com/setup_14.x | bash -
                apt-get install -q -y nodejs
                npm install -g yarn
                ;;
              fedora*)
                echo not supported
                exit 1
                ;;
              alpine*)
                echo not supported
                exit 1
                ;;
            esac
          run: |
            cd /src
            echo //registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}} > $HOME/.npmrc && yarn install && rm -rf $HOME/.npmrc
            yarn build:arm64 && yarn build:zip && yarn build:tgz
      - name: Upload building artifacts
        uses: actions/upload-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}-${{matrix.name}}
          retention-days: 2
          path:  |
            ./js/packages/eyes-universal/dist
            ./js/packages/eyes-universal/bin
  test-it:
    needs: [prepare, build]
    name: 'Test integration'
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Download building artifacts
        uses: actions/download-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}-x64
          path: ./js/packages/eyes-universal
      - name: Run tests
        uses: ./.github/actions/tests
        with:
          working-directory: ./js/packages/eyes-universal
          build-type: none
          test-type: it
  test-e2e:
    needs: [prepare, build]
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: alpine
            os: ubuntu-latest
            container: node:lts-alpine # not just "alpine" because it is not possible to setup nodejs in a regular way
            shell: ash -eo pipefail {0}
            arch-group: x64
          - name: ubuntu
            os: ubuntu-latest
            shell: bash
            arch-group: x64
          - name: windows
            os: windows-latest
            shell: bash
            arch-group: x64
          - name: macos
            os: macos-latest
            shell: bash
            arch-group: x64
          - name: linux-arm64
            arch: aarch64
            distro: ubuntu18.04
            os: ubuntu-latest
            shell: bash
            arch-group: arm64
    name: 'Test e2e (os: ${{matrix.name}})'
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
      - name: Setup Node.js
        env:
            arch: ${{matrix.arch}}
        if: ${{env.arch == ''}}
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Download building artifacts
        uses: actions/download-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}-${{matrix.arch-group}}
          path: ./js/packages/eyes-universal

      - uses: uraimo/run-on-arch-action@v2
        if: ${{matrix.arch}}
        name: Run Tests On ARM
        with:
          env: |
            artifact_name: universal-${{ matrix.distro }}_${{ matrix.arch }}
          githubToken: ${{ github.token }}
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          dockerRunArgs: |
            --volume "${PWD}/js/packages/eyes-universal/:/src"
          shell: /bin/sh
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y curl zip tar
                curl -sL https://deb.nodesource.com/setup_14.x | bash -
                apt-get install -q -y nodejs
                npm install -g yarn
                ;;
              fedora*)
                echo not supported
                exit 1
                ;;
              alpine*)
                echo not supported
                exit 1
                ;;
            esac
          run: |
            cd /src
            echo //registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}} > $HOME/.npmrc && yarn install && rm -rf $HOME/.npmrc
            yarn test:e2e

      - name: Run tests
        env:
            arch: ${{matrix.arch}}
        if: ${{env.arch == ''}}
        uses: ./.github/actions/tests
        with:
          working-directory: ./js/packages/eyes-universal
          build-type: none
          setup-type: none
          test-type: e2e
          shell: ${{matrix.shell}}
  bundle:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    name: Bundle the resouces
    steps:
      - name: Download building artifacts x64
        uses: actions/download-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}-x64
          path: ./eyes-universal
      - name: Download building artifacts arm64
        uses: actions/download-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}-arm64
          path: ./eyes-universal-arm64
      - name: Bundle artifacts
        shell: bash
        working-directory: ./eyes-universal
        run: |
          find ../eyes-universal-arm64 -type f -not -name '*.zip' -not -name '*.tar.gz' -exec bash -c 'cp ${0} ./bin/$(basename ${0})' {} \;
          rm -rf ./bin/*.tar.gz ./bin/*.zip
          zip -j ./bin/eyes-universal.zip $(find ./bin -type f -not -name '*.zip' -not -name '*.tar.gz' | xargs)
          tar -czf ./bin/eyes-universal.tar.gz $(find ./bin -type f -not -name '*.zip' -not -name '*.tar.gz' | xargs)
      - name: Upload bundle artifacts
        uses: actions/upload-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}
          retention-days: 2
          path:  |
            ./eyes-universal/dist
            ./eyes-universal/bin
  publish:
    needs: [prepare, build, test-it, test-e2e]
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Download building artifacts
        uses: actions/download-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}
          path: ./js/packages/eyes-universal
      - name: Publish to NPM
        id: publish
        uses: ./.github/actions/publish
        with:
          working-directory: ./js/packages/eyes-universal
          skip-build: true
      - name: Publish to GitHub
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ${{steps.publish.outputs.changelog}}
          tag_name: ${{needs.prepare.outputs.tag}}
          name: ${{needs.prepare.outputs.tag}}
          files: |
            ./js/packages/eyes-universal/bin/eyes-universal-alpine
            ./js/packages/eyes-universal/bin/eyes-universal-linux
            ./js/packages/eyes-universal/bin/eyes-universal-linux-arm64
            ./js/packages/eyes-universal/bin/eyes-universal-macos
            ./js/packages/eyes-universal/bin/eyes-universal-win.exe
            ./js/packages/eyes-universal/bin/eyes-universal.zip
            ./js/packages/eyes-universal/bin/eyes-universal.tar.gz
      - name: Send slack notification
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#00a398",
                  "blocks": [
                    {
                      "type":"section",
                      "text": {"type": "mrkdwn", "text": "@channel *Universal SDK* has been released under the tag <https://github.com/applitools/eyes.sdk.javascript1/releases/tag/${{needs.prepare.outputs.tag}}|${{needs.prepare.outputs.tag}}> 🎉 🎊 🥳"}
                    },
                    {
                      "type": "header",
                      "text": {"type": "plain_text", "text": "Changelog"}
                    },
                    {
                      "type":"section",
                      "text": {"type": "mrkdwn", "text": ${{toJSON(steps.publish.outputs.changelog)}}}
                    },
                    {"type": "divider"},
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Mac 🍎"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/eyes-universal-macos"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Linux 🐧"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/eyes-universal-linux"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Linux arm64 🐧 💪"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/eyes-universal-linux-arm64"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Windows 🪟"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/eyes-universal-win.exe"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download for Alpine 🏔️"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/eyes-universal-alpine"
                        },
                        {
                          "type": "button",
                          "text": {"type": "plain_text", "emoji": true, "text": "Download archive 🗃️"},
                          "url": "https://github.com/applitools/eyes.sdk.javascript1/releases/download/${{needs.prepare.outputs.tag}}/eyes-universal.zip"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.UNIVERSAL_SLACK_WEBHOOK_URL}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
