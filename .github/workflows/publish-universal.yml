name: Publish - universal

on:
  workflow_dispatch:
    inputs:
      version:
        description: version type
        type: choice
        options: [patch, minor, major]
        default: patch
  workflow_call:
    inputs:
      version:
        description: version type
        type: string
        default: patch
    secrets:
      NPM_TOKEN:
        required: true
      APPLITOOLS_API_KEY:
        required: true
      APPLITOOLS_API_KEY_READ:
        required: true
      UNIVERSAL_SLACK_WEBHOOK_URL:
        required: true

env:
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  AZURE_STORAGE_CONNECTION_STRING: ${{secrets.AZURE_STORAGE_CONNECTION_STRING}}

jobs:
  prepare:
    name: Prepare
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x64
          - name: arm64
            base_image: raspios_lite_arm64:latest
    runs-on: ubuntu-latest
    outputs:
      branch: ${{steps.version.outputs.branch}}
      version: ${{steps.version.outputs.version}}
      tag: ${{steps.version.outputs.tag}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Set ARM
        if: ${{matrix.base_image}}
        uses: pguyot/arm-runner-action@v2
        id: build_image
        with:
          base_image: ${{matrix.base_image}}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Version
        id: version
        uses: ./.github/actions/version
        with:
          working-directory: ./js/packages/eyes-universal
          version: ${{inputs.version || github.event.inputs.version}}
      - name: Build
        shell: bash
        working-directory: ./js/packages/eyes-universal
        run: uname -a && yarn build:${{matrix.name}} && yarn build:zip && yarn build:tgz
      - name: Upload building artifacts
        uses: actions/upload-artifact@v3
        with:
          name: eyes-universal-bin-${{steps.version.outputs.version}}-${{matrix.name}}
          retention-days: 2
          path:  |
            ./js/packages/eyes-universal/dist
            ./js/packages/eyes-universal/bin
  test-e2e:
    needs: [prepare]
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: alpine
            os: ubuntu-latest
            container: node:lts-alpine # not just "alpine" because it is not possible to setup nodejs in a regular way
            shell: ash -eo pipefail {0}
            arch: x64
          - name: ubuntu
            os: ubuntu-latest
            shell: bash
            arch: x64
          - name: windows
            os: windows-latest
            shell: bash
            arch: x64
          - name: macos
            os: macos-latest
            shell: bash
            arch: x64
          - name: linux-arm64
            os: ubuntu-latest
            base_image: raspios_lite_arm64:latest
            shell: bash
            arch: arm64
    name: 'Test e2e (os: ${{matrix.name}})'
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare.outputs.branch}}
      - name: Setup Node.js
        env:
            BASE_IMAGE: ${{matrix.base_image}}
        if: ${{env.BASE_IMAGE == ''}}
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
          architecture: ${{matrix.arch}}
          always-auth: true
      - name: Download building artifacts
        uses: actions/download-artifact@v3
        with:
          name: eyes-universal-bin-${{needs.prepare.outputs.version}}-${{matrix.arch}}
          path: ./js/packages/eyes-universal
      - name: Set ARM
        if: ${{matrix.base_image}}
        uses: pguyot/arm-runner-action@v2
        id: build_image
        with:
          base_image: ${{matrix.base_image}}
          commands: |
              apt-get update -y
              curl -sL https://deb.nodesource.com/setup_14.x | bash -
              apt-get install nodejs
              node -v
              node -e 'console.log(process.arch)'
              npm i -g yarn
              echo //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN} > $HOME/.npmrc
              yarn install
              yarn test
      - name: Run tests
        env:
            BASE_IMAGE: ${{matrix.base_image}}
        if: ${{env.BASE_IMAGE == ''}}
        uses: ./.github/actions/tests
        with:
          working-directory: ./js/packages/eyes-universal
          build-type: none
          setup-type: none
          test-type: e2e
          shell: ${{matrix.shell}}
